---
#-------------------------------------------------------------------------------
# Workflow configuration
#-------------------------------------------------------------------------------

name: "Binary build"
on:
  release:
    types: [published]
  push:
    paths:
      - ".github/workflows/build.yaml"
      - "Cargo.toml"
      - "crates/**"
      - "macos/**"
      - "windows/**"
      - "deployments/**"
      - "freedesktop/**"
  pull_request_review:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

#-------------------------------------------------------------------------------
# Workflow jobs
#-------------------------------------------------------------------------------

jobs:
  build-linux:
    name: "Build on Linux"
    runs-on: ubuntu-22.04
    steps:
      # Checkout repository (and submodules)
      - name: Checkout repository (and submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      # Get current git tag version
      - name: Get git version
        id: git_tag_version
        run: |
          export BUILD_VERSION=$(git describe --tags --abbrev=0)
          echo "Build at version $BUILD_VERSION"
          echo "BUILD_VERSION=$BUILD_VERSION" >> $GITHUB_OUTPUT
      # Install dependencies (from package manager)
      # - name: Install cross bin
      #   run: |
      #     wget https://99z.top/https://musl.cc/aarch64-linux-musl-cross.tgz
      #     sudo tar -xvf aarch64-linux-musl-cross.tgz  -C /opt/
      #     echo 'PATH=/opt/aarch64-linux-musl-cross/bin/:$PATH' >> ~/.bashrc
      #     source ~/.bashrc
      #     echo "
      #     [target.aarch64-unknown-linux-musl]
      #     linker = \"aarch64-linux-musl-ld\"" >> ~/.cargo/config
      - name: Install dependencies (from package manager)
        run: |
          sudo apt-get install libgl1-mesa-dev libxcb1-dev libxkbcommon-x11-dev libx11-xcb-dev libxcb-cursor0 libzstd-dev fuse libfuse-dev libwayland-dev -y;
          sudo apt-get install cmake ninja-build pkgconf libtool fish -y;
          sudo apt-get install musl-tools musl-dev -y;
          sudo apt-get install appstream -y;

      - name: Build cli for ARM linux
        run: |
          rustup target install aarch64-unknown-linux-musl
          cargo install cross
          cargo build --release -p wsrx --target aarch64-unknown-linux-musl;
      
      # Deploy ARM
      - name: Compress musl Binaries
        run: tar --transform='s!.*/!!' -czvf wsrx-cli-linux-musl-arm.tar.gz target/aarch64-unknown-linux-musl/release/wsrx
        
      # Move files
      - name: move files
        run: |
          mv wsrx-cli-linux-musl-aarch64.tar.gz wsrx-cli-${{steps.git_tag_version.outputs.BUILD_VERSION}}-linux-musl-aarch64.tar.gz
      
      # Upload ARM
      - name: Upload ARM cli package
        uses: actions/upload-artifact@v4
        with:
          name: wsrx-cli-${{steps.git_tag_version.outputs.BUILD_VERSION}}-linux-musl-aarch64.tar.gz
          path: wsrx-cli-${{steps.git_tag_version.outputs.BUILD_VERSION}}-linux-musl-aarch64.tar.gz

      # Upload to github release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            wsrx-cli-${{steps.git_tag_version.outputs.BUILD_VERSION}}-linux-musl-aarch64.tar.gz
   
